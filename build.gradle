plugins {
    id 'antlr'
    id 'java'
    id 'nebula.dependency-recommender' version '9.0.2'
    id 'com.diffplug.spotless' version '6.3.0'
    id 'com.adarshr.test-logger' version '3.2.0'
}

dependencyRecommendations {
    propertiesFile file: file('versions.props')
}

allprojects {
    group 'io.korandoru.probe'
    version '0.1-SNAPSHOT'

    repositories {
        mavenCentral()
        mavenLocal()
    }
}

subprojects {
    apply plugin: 'com.adarshr.test-logger'
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'java'
    apply plugin: 'nebula.dependency-recommender'


    spotless {
        format 'misc', {
            // define the files to apply `misc` to
            target '*.gradle', '*.md', '.gitignore'

            // define the steps to apply to those files
            trimTrailingWhitespace()
            indentWithSpaces(4)
            endWithNewline()
        }

        java {
            importOrder('', 'static ')
            removeUnusedImports()
            trimTrailingWhitespace()
            indentWithSpaces(4)
            endWithNewline()
        }
    }

    compileJava {
        options.encoding = "UTF-8"
        options.compilerArgs += ["--enable-preview"]
    }

    compileTestJava {
        options.encoding = "UTF-8"
        options.compilerArgs += ["--enable-preview"]
    }

    javadoc {
        options.encoding = 'UTF-8'
    }

    sourceCompatibility = 17
    targetCompatibility = 17

    dependencies {
        implementation 'org.slf4j:slf4j-api'

        testImplementation 'org.junit.vintage:junit-vintage-engine'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.slf4j:slf4j-simple'
        testImplementation 'org.mockito:mockito-core'
        testImplementation 'org.assertj:assertj-core'
    }

    test {
        jvmArgs += "--enable-preview"
        useJUnitPlatform()
    }
}

project(':probe-spdx') {
    apply plugin: 'antlr'

    dependencies {
        antlr "org.antlr:antlr4:4.9.3"

        compileOnly 'org.projectlombok:lombok:1.18.22'
        annotationProcessor 'org.projectlombok:lombok:1.18.22'

        testCompileOnly 'org.projectlombok:lombok:1.18.22'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

        implementation 'com.fasterxml.jackson.core:jackson-annotations'
        implementation 'com.fasterxml.jackson.core:jackson-core'
        implementation 'com.fasterxml.jackson.core:jackson-databind'
    }

    generateGrammarSource {
        arguments += ["-visitor", "-long-messages"]
        arguments += ["-package", "io.korandoru.probe.spdx.antlr.generated"]
        outputDirectory = new File(outputDirectory, "io/korandoru/probe/spdx/antlr/generated")
    }
}
